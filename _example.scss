// Iterator tester
@mixin iterator-test($collection, $args...) {
  // Initialize a new iterator
  $iterator: iterator($collection, $args...);

  // Iterate over it, while it's not done
  @while iterator-valid($iterator) {
    // Inspect the (cleaned) iterator
    content: inspect(iterator-api($iterator));

    // Get next value from iterator
    $iterator: iterator-next($iterator);
  }

  // Inspect it one last time to see it finished
  content: inspect(iterator-api($iterator));
}

// String test
.test-string {
  @include iterator-test("Hello!");
}

// List test
.test-list {
  @include iterator-test('a' 'b' 'c' 'd');
}

// Yield test
@function double($value) {
  @return $value * 2;
}
  
.test-yield {
  @include iterator-test(1 2 3 4, $yield: 'double');
}

// Map test
.test-map {
  @include iterator-test(('a': 1, 'b': 2));
}
